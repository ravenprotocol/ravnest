syntax = "proto3";

import "tensor.proto";

service CommServer {
  rpc send_buffer (stream SendTensor) returns (SendTensorReply) {}
  rpc buffer_status (CheckBufferStatus) returns (BufferStatusReply) {}
  rpc reduce_chunk (stream ReduceChunk) returns (ReceivedChunk) {}
  rpc gather_chunk (stream GatherChunk) returns (ReceivedChunk) {}
  rpc reduce_iteration (CheckReduceIteration) returns (ReduceIterationReply) {}
  rpc gather_iteration (CheckGatherIteration) returns (GatherIterationReply) {}
  rpc get_latest_weights (SendLatestWeights) returns (stream WeightsChunk) {}
  rpc Ping (PingRequest) returns (PingResponse) {}
}

message CheckBufferStatus {
  string name = 1;
  string type = 2;
}

message BufferStatusReply {
  string status = 1;
}

message ReduceChunk {
  int32 ring_id = 1;
  DataChunk data_chunk = 2;
}

message GatherChunk {
  int32 ring_id = 1;
  DataChunk data_chunk = 2;
}

message WeightsChunk {
  // int32 
  TensorChunk tensor_chunk = 2;
}

message DataChunk {
  bytes buffer = 1;
  string type = 2; //$weights or $gradients
  int32 data_size = 3;
}

message ReceivedChunk {
  bool reply = 1; 
}

message CheckReduceIteration {
  int32 ring_id = 1;
}

message ReduceIterationReply {
  int32 iteration = 1;
}

message CheckGatherIteration {
  int32 ring_id = 1;
}

message GatherIterationReply {
  int32 iteration = 1;
}

message SendLatestWeights {
  bytes param_names = 1;
}

message PingRequest {
  string data = 1;
}

message PingResponse {
  string data = 1;
}